// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferStarted extends ethereum.Event {
  get params(): OwnershipTransferStarted__Params {
    return new OwnershipTransferStarted__Params(this);
  }
}

export class OwnershipTransferStarted__Params {
  _event: OwnershipTransferStarted;

  constructor(event: OwnershipTransferStarted) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PaymentProcessed extends ethereum.Event {
  get params(): PaymentProcessed__Params {
    return new PaymentProcessed__Params(this);
  }
}

export class PaymentProcessed__Params {
  _event: PaymentProcessed;

  constructor(event: PaymentProcessed) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get planId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newNextPaymentDate(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class PlanCreated extends ethereum.Event {
  get params(): PlanCreated__Params {
    return new PlanCreated__Params(this);
  }
}

export class PlanCreated__Params {
  _event: PlanCreated;

  constructor(event: PlanCreated) {
    this._event = event;
  }

  get planId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get merchant(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenDecimals(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get billingCycle(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get priceInUsd(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get usdPrice(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get priceFeedAddress(): Address {
    return this._event.parameters[8].value.toAddress();
  }
}

export class PlanUpdated extends ethereum.Event {
  get params(): PlanUpdated__Params {
    return new PlanUpdated__Params(this);
  }
}

export class PlanUpdated__Params {
  _event: PlanUpdated;

  constructor(event: PlanUpdated) {
    this._event = event;
  }

  get planId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get billingCycle(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get priceInUsd(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get usdPrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get priceFeedAddress(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Subscribed extends ethereum.Event {
  get params(): Subscribed__Params {
    return new Subscribed__Params(this);
  }
}

export class Subscribed__Params {
  _event: Subscribed;

  constructor(event: Subscribed) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get planId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get nextPaymentDate(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SubscriptionCancelled extends ethereum.Event {
  get params(): SubscriptionCancelled__Params {
    return new SubscriptionCancelled__Params(this);
  }
}

export class SubscriptionCancelled__Params {
  _event: SubscriptionCancelled;

  constructor(event: SubscriptionCancelled) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get planId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Subscription__plansResult {
  value0: Address;
  value1: Address;
  value2: i32;
  value3: BigInt;
  value4: BigInt;
  value5: boolean;
  value6: BigInt;
  value7: Address;

  constructor(
    value0: Address,
    value1: Address,
    value2: i32,
    value3: BigInt,
    value4: BigInt,
    value5: boolean,
    value6: BigInt,
    value7: Address,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2)),
    );
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromAddress(this.value7));
    return map;
  }

  getMerchant(): Address {
    return this.value0;
  }

  getToken(): Address {
    return this.value1;
  }

  getTokenDecimals(): i32 {
    return this.value2;
  }

  getPrice(): BigInt {
    return this.value3;
  }

  getBillingCycle(): BigInt {
    return this.value4;
  }

  getPriceInUsd(): boolean {
    return this.value5;
  }

  getUsdPrice(): BigInt {
    return this.value6;
  }

  getPriceFeedAddress(): Address {
    return this.value7;
  }
}

export class Subscription__userSubscriptionsResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }

  getSubscriber(): Address {
    return this.value0;
  }

  getPlanId(): BigInt {
    return this.value1;
  }

  getStartTime(): BigInt {
    return this.value2;
  }

  getNextPaymentDate(): BigInt {
    return this.value3;
  }

  getIsActive(): boolean {
    return this.value4;
  }
}

export class Subscription extends ethereum.SmartContract {
  static bind(address: Address): Subscription {
    return new Subscription("Subscription", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PAUSER_ROLE(): Bytes {
    let result = super.call("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PAUSER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  nextPlanId(): BigInt {
    let result = super.call("nextPlanId", "nextPlanId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextPlanId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nextPlanId", "nextPlanId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pendingOwner(): Address {
    let result = super.call("pendingOwner", "pendingOwner():(address)", []);

    return result[0].toAddress();
  }

  try_pendingOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("pendingOwner", "pendingOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  plans(param0: BigInt): Subscription__plansResult {
    let result = super.call(
      "plans",
      "plans(uint256):(address,address,uint8,uint256,uint256,bool,uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new Subscription__plansResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toI32(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBoolean(),
      result[6].toBigInt(),
      result[7].toAddress(),
    );
  }

  try_plans(param0: BigInt): ethereum.CallResult<Subscription__plansResult> {
    let result = super.tryCall(
      "plans",
      "plans(uint256):(address,address,uint8,uint256,uint256,bool,uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Subscription__plansResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toI32(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBoolean(),
        value[6].toBigInt(),
        value[7].toAddress(),
      ),
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  userSubscriptions(
    param0: Address,
    param1: BigInt,
  ): Subscription__userSubscriptionsResult {
    let result = super.call(
      "userSubscriptions",
      "userSubscriptions(address,uint256):(address,uint256,uint256,uint256,bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return new Subscription__userSubscriptionsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean(),
    );
  }

  try_userSubscriptions(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<Subscription__userSubscriptionsResult> {
    let result = super.tryCall(
      "userSubscriptions",
      "userSubscriptions(address,uint256):(address,uint256,uint256,uint256,bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Subscription__userSubscriptionsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean(),
      ),
    );
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class CancelSubscriptionCall extends ethereum.Call {
  get inputs(): CancelSubscriptionCall__Inputs {
    return new CancelSubscriptionCall__Inputs(this);
  }

  get outputs(): CancelSubscriptionCall__Outputs {
    return new CancelSubscriptionCall__Outputs(this);
  }
}

export class CancelSubscriptionCall__Inputs {
  _call: CancelSubscriptionCall;

  constructor(call: CancelSubscriptionCall) {
    this._call = call;
  }

  get _planId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelSubscriptionCall__Outputs {
  _call: CancelSubscriptionCall;

  constructor(call: CancelSubscriptionCall) {
    this._call = call;
  }
}

export class CreatePlanCall extends ethereum.Call {
  get inputs(): CreatePlanCall__Inputs {
    return new CreatePlanCall__Inputs(this);
  }

  get outputs(): CreatePlanCall__Outputs {
    return new CreatePlanCall__Outputs(this);
  }
}

export class CreatePlanCall__Inputs {
  _call: CreatePlanCall;

  constructor(call: CreatePlanCall) {
    this._call = call;
  }

  get _merchantAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _billingCycle(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _priceInUsd(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get _usdPrice(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _priceFeedAddress(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class CreatePlanCall__Outputs {
  _call: CreatePlanCall;

  constructor(call: CreatePlanCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get initialOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class ProcessPaymentCall extends ethereum.Call {
  get inputs(): ProcessPaymentCall__Inputs {
    return new ProcessPaymentCall__Inputs(this);
  }

  get outputs(): ProcessPaymentCall__Outputs {
    return new ProcessPaymentCall__Outputs(this);
  }
}

export class ProcessPaymentCall__Inputs {
  _call: ProcessPaymentCall;

  constructor(call: ProcessPaymentCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _planId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ProcessPaymentCall__Outputs {
  _call: ProcessPaymentCall;

  constructor(call: ProcessPaymentCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SubscribeCall extends ethereum.Call {
  get inputs(): SubscribeCall__Inputs {
    return new SubscribeCall__Inputs(this);
  }

  get outputs(): SubscribeCall__Outputs {
    return new SubscribeCall__Outputs(this);
  }
}

export class SubscribeCall__Inputs {
  _call: SubscribeCall;

  constructor(call: SubscribeCall) {
    this._call = call;
  }

  get _planId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SubscribeCall__Outputs {
  _call: SubscribeCall;

  constructor(call: SubscribeCall) {
    this._call = call;
  }
}

export class SubscribeWithPermitCall extends ethereum.Call {
  get inputs(): SubscribeWithPermitCall__Inputs {
    return new SubscribeWithPermitCall__Inputs(this);
  }

  get outputs(): SubscribeWithPermitCall__Outputs {
    return new SubscribeWithPermitCall__Outputs(this);
  }
}

export class SubscribeWithPermitCall__Inputs {
  _call: SubscribeWithPermitCall;

  constructor(call: SubscribeWithPermitCall) {
    this._call = call;
  }

  get _planId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SubscribeWithPermitCall__Outputs {
  _call: SubscribeWithPermitCall;

  constructor(call: SubscribeWithPermitCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdatePlanCall extends ethereum.Call {
  get inputs(): UpdatePlanCall__Inputs {
    return new UpdatePlanCall__Inputs(this);
  }

  get outputs(): UpdatePlanCall__Outputs {
    return new UpdatePlanCall__Outputs(this);
  }
}

export class UpdatePlanCall__Inputs {
  _call: UpdatePlanCall;

  constructor(call: UpdatePlanCall) {
    this._call = call;
  }

  get _planId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _billingCycle(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _priceInUsd(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get _usdPrice(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _priceFeedAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class UpdatePlanCall__Outputs {
  _call: UpdatePlanCall;

  constructor(call: UpdatePlanCall) {
    this._call = call;
  }
}
