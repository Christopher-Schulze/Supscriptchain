/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MaliciousToken,
  MaliciousTokenInterface,
} from "../../../contracts/mocks/MaliciousToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "data",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "setReentrancy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611da2380380611da283398181016040528101906100329190610223565b826000908161004191906104cf565b50816001908161005191906104cf565b5080600260006101000a81548160ff021916908360ff1602179055505050506105a1565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6100dc82610093565b810181811067ffffffffffffffff821117156100fb576100fa6100a4565b5b80604052505050565b600061010e610075565b905061011a82826100d3565b919050565b600067ffffffffffffffff82111561013a576101396100a4565b5b61014382610093565b9050602081019050919050565b60005b8381101561016e578082015181840152602081019050610153565b60008484015250505050565b600061018d6101888461011f565b610104565b9050828152602081018484840111156101a9576101a861008e565b5b6101b4848285610150565b509392505050565b600082601f8301126101d1576101d0610089565b5b81516101e184826020860161017a565b91505092915050565b600060ff82169050919050565b610200816101ea565b811461020b57600080fd5b50565b60008151905061021d816101f7565b92915050565b60008060006060848603121561023c5761023b61007f565b5b600084015167ffffffffffffffff81111561025a57610259610084565b5b610266868287016101bc565b935050602084015167ffffffffffffffff81111561028757610286610084565b5b610293868287016101bc565b92505060406102a48682870161020e565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061030057607f821691505b602082108103610313576103126102b9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261037b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261033e565b610385868361033e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006103cc6103c76103c28461039d565b6103a7565b61039d565b9050919050565b6000819050919050565b6103e6836103b1565b6103fa6103f2826103d3565b84845461034b565b825550505050565b600090565b61040f610402565b61041a8184846103dd565b505050565b5b8181101561043e57610433600082610407565b600181019050610420565b5050565b601f8211156104835761045481610319565b61045d8461032e565b8101602085101561046c578190505b6104806104788561032e565b83018261041f565b50505b505050565b600082821c905092915050565b60006104a660001984600802610488565b1980831691505092915050565b60006104bf8383610495565b9150826002028217905092915050565b6104d8826102ae565b67ffffffffffffffff8111156104f1576104f06100a4565b5b6104fb82546102e8565b610506828285610442565b600060209050601f8311600181146105395760008415610527578287015190505b61053185826104b3565b865550610599565b601f19841661054786610319565b60005b8281101561056f5784890151825560018201915060208501945060208101905061054a565b8683101561058c5784890151610588601f891682610495565b8355505b6001600288020188555050505b505050505050565b6117f2806105b06000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b4114610214578063a9059cbb14610232578063d4b8399214610262578063dd62ed3e14610280576100cf565b806340c10f19146101aa57806370a08231146101c657806373d4a13a146101f6576100cf565b806305f52af5146100d457806306fdde03146100f0578063095ea7b31461010e57806318160ddd1461013e57806323b872dd1461015c578063313ce5671461018c575b600080fd5b6100ee60048036038101906100e99190610dee565b6102b0565b005b6100f8610377565b6040516101059190610ede565b60405180910390f35b61012860048036038101906101239190610f36565b610405565b6040516101359190610f91565b60405180910390f35b6101466104f7565b6040516101539190610fbb565b60405180910390f35b61017660048036038101906101719190610fd6565b6104fd565b6040516101839190610f91565b60405180910390f35b610194610917565b6040516101a19190611045565b60405180910390f35b6101c460048036038101906101bf9190610f36565b61092a565b005b6101e060048036038101906101db9190611060565b610a03565b6040516101ed9190610fbb565b60405180910390f35b6101fe610a1b565b60405161020b91906110e2565b60405180910390f35b61021c610aa9565b6040516102299190610ede565b60405180910390f35b61024c60048036038101906102479190610f36565b610b37565b6040516102599190610f91565b60405180910390f35b61026a610cd6565b6040516102779190611113565b60405180910390f35b61029a6004803603810190610295919061112e565b610cfc565b6040516102a79190610fbb565b60405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361031f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610316906111ba565b60405180910390fd5b82600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160079182610371929190611420565b50505050565b6000805461038490611243565b80601f01602080910402602001604051908101604052809291908181526020018280546103b090611243565b80156103fd5780601f106103d2576101008083540402835291602001916103fd565b820191906000526020600020905b8154815290600101906020018083116103e057829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104e59190610fbb565b60405180910390a36001905092915050565b60035481565b600081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610581576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057890611562565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610640576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610637906115f4565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461068f9190611643565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106e59190611677565b9250508190555081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107789190611643565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107dc9190610fbb565b60405180910390a3600073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461090c576000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660076040516108849190611739565b6000604051808303816000865af19150503d80600081146108c1576040519150601f19603f3d011682016040523d82523d6000602084013e6108c6565b606091505b505090508061090a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109019061179c565b60405180910390fd5b505b600190509392505050565b600260009054906101000a900460ff1681565b806003600082825461093c9190611677565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109929190611677565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109f79190610fbb565b60405180910390a35050565b60046020528060005260406000206000915090505481565b60078054610a2890611243565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5490611243565b8015610aa15780601f10610a7657610100808354040283529160200191610aa1565b820191906000526020600020905b815481529060010190602001808311610a8457829003601f168201915b505050505081565b60018054610ab690611243565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae290611243565b8015610b2f5780601f10610b0457610100808354040283529160200191610b2f565b820191906000526020600020905b815481529060010190602001808311610b1257829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610bbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb290611562565b60405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c0a9190611643565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c609190611677565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cc49190610fbb565b60405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005602052816000526040600020602052806000526040600020600091509150505481565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d5682610d2b565b9050919050565b610d6681610d4b565b8114610d7157600080fd5b50565b600081359050610d8381610d5d565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610dae57610dad610d89565b5b8235905067ffffffffffffffff811115610dcb57610dca610d8e565b5b602083019150836001820283011115610de757610de6610d93565b5b9250929050565b600080600060408486031215610e0757610e06610d21565b5b6000610e1586828701610d74565b935050602084013567ffffffffffffffff811115610e3657610e35610d26565b5b610e4286828701610d98565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e88578082015181840152602081019050610e6d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610eb082610e4e565b610eba8185610e59565b9350610eca818560208601610e6a565b610ed381610e94565b840191505092915050565b60006020820190508181036000830152610ef88184610ea5565b905092915050565b6000819050919050565b610f1381610f00565b8114610f1e57600080fd5b50565b600081359050610f3081610f0a565b92915050565b60008060408385031215610f4d57610f4c610d21565b5b6000610f5b85828601610d74565b9250506020610f6c85828601610f21565b9150509250929050565b60008115159050919050565b610f8b81610f76565b82525050565b6000602082019050610fa66000830184610f82565b92915050565b610fb581610f00565b82525050565b6000602082019050610fd06000830184610fac565b92915050565b600080600060608486031215610fef57610fee610d21565b5b6000610ffd86828701610d74565b935050602061100e86828701610d74565b925050604061101f86828701610f21565b9150509250925092565b600060ff82169050919050565b61103f81611029565b82525050565b600060208201905061105a6000830184611036565b92915050565b60006020828403121561107657611075610d21565b5b600061108484828501610d74565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60006110b48261108d565b6110be8185611098565b93506110ce818560208601610e6a565b6110d781610e94565b840191505092915050565b600060208201905081810360008301526110fc81846110a9565b905092915050565b61110d81610d4b565b82525050565b60006020820190506111286000830184611104565b92915050565b6000806040838503121561114557611144610d21565b5b600061115385828601610d74565b925050602061116485828601610d74565b9150509250929050565b7f746172676574207a65726f206164647265737300000000000000000000000000600082015250565b60006111a4601383610e59565b91506111af8261116e565b602082019050919050565b600060208201905081810360008301526111d381611197565b9050919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061125b57607f821691505b60208210810361126e5761126d611214565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112d67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611299565b6112e08683611299565b95508019841693508086168417925050509392505050565b6000819050919050565b600061131d61131861131384610f00565b6112f8565b610f00565b9050919050565b6000819050919050565b61133783611302565b61134b61134382611324565b8484546112a6565b825550505050565b600090565b611360611353565b61136b81848461132e565b505050565b5b8181101561138f57611384600082611358565b600181019050611371565b5050565b601f8211156113d4576113a581611274565b6113ae84611289565b810160208510156113bd578190505b6113d16113c985611289565b830182611370565b50505b505050565b600082821c905092915050565b60006113f7600019846008026113d9565b1980831691505092915050565b600061141083836113e6565b9150826002028217905092915050565b61142a83836111da565b67ffffffffffffffff811115611443576114426111e5565b5b61144d8254611243565b611458828285611393565b6000601f8311600181146114875760008415611475578287013590505b61147f8582611404565b8655506114e7565b601f19841661149586611274565b60005b828110156114bd57848901358255600182019150602085019450602081019050611498565b868310156114da57848901356114d6601f8916826113e6565b8355505b6001600288020188555050505b50505050505050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061154c602683610e59565b9150611557826114f0565b604082019050919050565b6000602082019050818103600083015261157b8161153f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b60006115de602883610e59565b91506115e982611582565b604082019050919050565b6000602082019050818103600083015261160d816115d1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061164e82610f00565b915061165983610f00565b925082820390508181111561167157611670611614565b5b92915050565b600061168282610f00565b915061168d83610f00565b92508282019050808211156116a5576116a4611614565b5b92915050565b600081905092915050565b600081546116c381611243565b6116cd81866116ab565b945060018216600081146116e857600181146116fd57611730565b60ff1983168652811515820286019350611730565b61170685611274565b60005b8381101561172857815481890152600182019150602081019050611709565b838801955050505b50505092915050565b600061174582846116b6565b915081905092915050565b7f7265656e7472616e742063616c6c206661696c65640000000000000000000000600082015250565b6000611786601583610e59565b915061179182611750565b602082019050919050565b600060208201905081810360008301526117b581611779565b905091905056fea26469706673582212207d7f58cd161aa63e368d638a6ecffac3aa04cc430ab76060d85aeb4099f3327764736f6c634300081a0033";

type MaliciousTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MaliciousTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MaliciousToken__factory extends ContractFactory {
  constructor(...args: MaliciousTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _symbol, _decimals, overrides || {}) as Promise<
      MaliciousToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MaliciousToken__factory {
    return super.connect(runner) as MaliciousToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaliciousTokenInterface {
    return new Interface(_abi) as MaliciousTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MaliciousToken {
    return new Contract(address, _abi, runner) as unknown as MaliciousToken;
  }
}
