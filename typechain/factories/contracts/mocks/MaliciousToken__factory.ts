/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MaliciousToken,
  MaliciousTokenInterface,
} from "../../../contracts/mocks/MaliciousToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "data",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "setReentrancy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611cc7380380611cc783398181016040528101906100329190610223565b826000908161004191906104cf565b50816001908161005191906104cf565b5080600260006101000a81548160ff021916908360ff1602179055505050506105a1565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6100dc82610093565b810181811067ffffffffffffffff821117156100fb576100fa6100a4565b5b80604052505050565b600061010e610075565b905061011a82826100d3565b919050565b600067ffffffffffffffff82111561013a576101396100a4565b5b61014382610093565b9050602081019050919050565b60005b8381101561016e578082015181840152602081019050610153565b60008484015250505050565b600061018d6101888461011f565b610104565b9050828152602081018484840111156101a9576101a861008e565b5b6101b4848285610150565b509392505050565b600082601f8301126101d1576101d0610089565b5b81516101e184826020860161017a565b91505092915050565b600060ff82169050919050565b610200816101ea565b811461020b57600080fd5b50565b60008151905061021d816101f7565b92915050565b60008060006060848603121561023c5761023b61007f565b5b600084015167ffffffffffffffff81111561025a57610259610084565b5b610266868287016101bc565b935050602084015167ffffffffffffffff81111561028757610286610084565b5b610293868287016101bc565b92505060406102a48682870161020e565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061030057607f821691505b602082108103610313576103126102b9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261037b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261033e565b610385868361033e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006103cc6103c76103c28461039d565b6103a7565b61039d565b9050919050565b6000819050919050565b6103e6836103b1565b6103fa6103f2826103d3565b84845461034b565b825550505050565b600090565b61040f610402565b61041a8184846103dd565b505050565b5b8181101561043e57610433600082610407565b600181019050610420565b5050565b601f8211156104835761045481610319565b61045d8461032e565b8101602085101561046c578190505b6104806104788561032e565b83018261041f565b50505b505050565b600082821c905092915050565b60006104a660001984600802610488565b1980831691505092915050565b60006104bf8383610495565b9150826002028217905092915050565b6104d8826102ae565b67ffffffffffffffff8111156104f1576104f06100a4565b5b6104fb82546102e8565b610506828285610442565b600060209050601f8311600181146105395760008415610527578287015190505b61053185826104b3565b865550610599565b601f19841661054786610319565b60005b8281101561056f5784890151825560018201915060208501945060208101905061054a565b8683101561058c5784890151610588601f891682610495565b8355505b6001600288020188555050505b505050505050565b611717806105b06000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b4114610214578063a9059cbb14610232578063d4b8399214610262578063dd62ed3e14610280576100cf565b806340c10f19146101aa57806370a08231146101c657806373d4a13a146101f6576100cf565b806305f52af5146100d457806306fdde03146100f0578063095ea7b31461010e57806318160ddd1461013e57806323b872dd1461015c578063313ce5671461018c575b600080fd5b6100ee60048036038101906100e99190610d7f565b6102b0565b005b6100f8610308565b6040516101059190610e6f565b60405180910390f35b61012860048036038101906101239190610ec7565b610396565b6040516101359190610f22565b60405180910390f35b610146610488565b6040516101539190610f4c565b60405180910390f35b61017660048036038101906101719190610f67565b61048e565b6040516101839190610f22565b60405180910390f35b6101946108a8565b6040516101a19190610fd6565b60405180910390f35b6101c460048036038101906101bf9190610ec7565b6108bb565b005b6101e060048036038101906101db9190610ff1565b610994565b6040516101ed9190610f4c565b60405180910390f35b6101fe6109ac565b60405161020b9190611073565b60405180910390f35b61021c610a3a565b6040516102299190610e6f565b60405180910390f35b61024c60048036038101906102479190610ec7565b610ac8565b6040516102599190610f22565b60405180910390f35b61026a610c67565b60405161027791906110a4565b60405180910390f35b61029a600480360381019061029591906110bf565b610c8d565b6040516102a79190610f4c565b60405180910390f35b82600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160079182610302929190611345565b50505050565b6000805461031590611168565b80601f016020809104026020016040519081016040528092919081815260200182805461034190611168565b801561038e5780601f106103635761010080835404028352916020019161038e565b820191906000526020600020905b81548152906001019060200180831161037157829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104769190610f4c565b60405180910390a36001905092915050565b60035481565b600081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990611487565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c890611519565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106209190611568565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610676919061159c565b9250508190555081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107099190611568565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161076d9190610f4c565b60405180910390a3600073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461089d576000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166007604051610815919061165e565b6000604051808303816000865af19150503d8060008114610852576040519150601f19603f3d011682016040523d82523d6000602084013e610857565b606091505b505090508061089b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610892906116c1565b60405180910390fd5b505b600190509392505050565b600260009054906101000a900460ff1681565b80600360008282546108cd919061159c565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610923919061159c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109889190610f4c565b60405180910390a35050565b60046020528060005260406000206000915090505481565b600780546109b990611168565b80601f01602080910402602001604051908101604052809291908181526020018280546109e590611168565b8015610a325780601f10610a0757610100808354040283529160200191610a32565b820191906000526020600020905b815481529060010190602001808311610a1557829003601f168201915b505050505081565b60018054610a4790611168565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7390611168565b8015610ac05780601f10610a9557610100808354040283529160200191610ac0565b820191906000526020600020905b815481529060010190602001808311610aa357829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4390611487565b60405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b9b9190611568565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bf1919061159c565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c559190610f4c565b60405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005602052816000526040600020602052806000526040600020600091509150505481565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ce782610cbc565b9050919050565b610cf781610cdc565b8114610d0257600080fd5b50565b600081359050610d1481610cee565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610d3f57610d3e610d1a565b5b8235905067ffffffffffffffff811115610d5c57610d5b610d1f565b5b602083019150836001820283011115610d7857610d77610d24565b5b9250929050565b600080600060408486031215610d9857610d97610cb2565b5b6000610da686828701610d05565b935050602084013567ffffffffffffffff811115610dc757610dc6610cb7565b5b610dd386828701610d29565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e19578082015181840152602081019050610dfe565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e4182610ddf565b610e4b8185610dea565b9350610e5b818560208601610dfb565b610e6481610e25565b840191505092915050565b60006020820190508181036000830152610e898184610e36565b905092915050565b6000819050919050565b610ea481610e91565b8114610eaf57600080fd5b50565b600081359050610ec181610e9b565b92915050565b60008060408385031215610ede57610edd610cb2565b5b6000610eec85828601610d05565b9250506020610efd85828601610eb2565b9150509250929050565b60008115159050919050565b610f1c81610f07565b82525050565b6000602082019050610f376000830184610f13565b92915050565b610f4681610e91565b82525050565b6000602082019050610f616000830184610f3d565b92915050565b600080600060608486031215610f8057610f7f610cb2565b5b6000610f8e86828701610d05565b9350506020610f9f86828701610d05565b9250506040610fb086828701610eb2565b9150509250925092565b600060ff82169050919050565b610fd081610fba565b82525050565b6000602082019050610feb6000830184610fc7565b92915050565b60006020828403121561100757611006610cb2565b5b600061101584828501610d05565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60006110458261101e565b61104f8185611029565b935061105f818560208601610dfb565b61106881610e25565b840191505092915050565b6000602082019050818103600083015261108d818461103a565b905092915050565b61109e81610cdc565b82525050565b60006020820190506110b96000830184611095565b92915050565b600080604083850312156110d6576110d5610cb2565b5b60006110e485828601610d05565b92505060206110f585828601610d05565b9150509250929050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061118057607f821691505b60208210810361119357611192611139565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111fb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826111be565b61120586836111be565b95508019841693508086168417925050509392505050565b6000819050919050565b600061124261123d61123884610e91565b61121d565b610e91565b9050919050565b6000819050919050565b61125c83611227565b61127061126882611249565b8484546111cb565b825550505050565b600090565b611285611278565b611290818484611253565b505050565b5b818110156112b4576112a960008261127d565b600181019050611296565b5050565b601f8211156112f9576112ca81611199565b6112d3846111ae565b810160208510156112e2578190505b6112f66112ee856111ae565b830182611295565b50505b505050565b600082821c905092915050565b600061131c600019846008026112fe565b1980831691505092915050565b6000611335838361130b565b9150826002028217905092915050565b61134f83836110ff565b67ffffffffffffffff8111156113685761136761110a565b5b6113728254611168565b61137d8282856112b8565b6000601f8311600181146113ac576000841561139a578287013590505b6113a48582611329565b86555061140c565b601f1984166113ba86611199565b60005b828110156113e2578489013582556001820191506020850194506020810190506113bd565b868310156113ff57848901356113fb601f89168261130b565b8355505b6001600288020188555050505b50505050505050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611471602683610dea565b915061147c82611415565b604082019050919050565b600060208201905081810360008301526114a081611464565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000611503602883610dea565b915061150e826114a7565b604082019050919050565b60006020820190508181036000830152611532816114f6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061157382610e91565b915061157e83610e91565b925082820390508181111561159657611595611539565b5b92915050565b60006115a782610e91565b91506115b283610e91565b92508282019050808211156115ca576115c9611539565b5b92915050565b600081905092915050565b600081546115e881611168565b6115f281866115d0565b9450600182166000811461160d576001811461162257611655565b60ff1983168652811515820286019350611655565b61162b85611199565b60005b8381101561164d5781548189015260018201915060208101905061162e565b838801955050505b50505092915050565b600061166a82846115db565b915081905092915050565b7f7265656e7472616e742063616c6c206661696c65640000000000000000000000600082015250565b60006116ab601583610dea565b91506116b682611675565b602082019050919050565b600060208201905081810360008301526116da8161169e565b905091905056fea26469706673582212203e9674fc3301b91efdbedc111fe6aaf32290e37d7fdc1fda3714729fe634e63864736f6c634300081a0033";

type MaliciousTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MaliciousTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MaliciousToken__factory extends ContractFactory {
  constructor(...args: MaliciousTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _symbol, _decimals, overrides || {}) as Promise<
      MaliciousToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MaliciousToken__factory {
    return super.connect(runner) as MaliciousToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaliciousTokenInterface {
    return new Interface(_abi) as MaliciousTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MaliciousToken {
    return new Contract(address, _abi, runner) as unknown as MaliciousToken;
  }
}
